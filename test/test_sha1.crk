// Test SHA1 class
// Copyright 2012 Conrad Steenberg <conrad.steenberg@gmail.com>
//
//   This Source Code Form is subject to the terms of the Mozilla Public
//   License, v. 2.0. If a copy of the MPL was not distributed with this
//   file, You can obtain one at http://mozilla.org/MPL/2.0/.
//
// 12/26/2012

import crack.ascii hex;
import crack.hash.sha1 SHA1;
import crack.io cout, FStr;
import crack.lang AppendBuffer;
import crack.runtime exit;

const TEST_FILE :=
    "libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I/usr/local/include -D_DEBUG"
    "-D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS"
    "-D__STDC_LIMIT_MACROS -DCRACKLIB=\"/usr/local/lib/crack-0.10\" -pthread"
    "-g -O2 -MT compiler/libCrackLang_la-init.lo -MD -MP -MF"
    "compiler/.deps/libCrackLang_la-init.Tpo -c compiler/init.cc  -fPIC -DPIC"
    "-o compiler/.libs/libCrackLang_la-init.o libtool: compile:  g++"
    "-DHAVE_CONFIG_H -I. -I/usr/local/include -D_DEBUG -D_GNU_SOURCE"
    "-D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS"
    "-DCRACKLIB=\"/usr/local/lib/crack-0.10\" -pthread -g -O2 -MT"
    "builder/llvm/libCrackLang_la-Ops.lo -MD -MP -MF"
    "builder/llvm/.deps/libCrackLang_la-Ops.Tpo -c builder/llvm/Ops.cc -o"
    "builder/llvm/libCrackLang_la-Ops.o >/dev/null 2>&1 mv -f"
    "builder/llvm/.deps/libCrackLang_la-Utils.Tpo"
    "builder/llvm/.deps/libCrackLang_la-Utils.Plo /bin/bash ./libtool"
    "--tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.  -I/usr/local/include"
    "-D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS"
    "-D__STDC_LIMIT_MACROS -DCRACKLIB=\"/usr/local/lib/crack-0.10\" -pthread"
    "-g -O2 -MT compiler/libCrackLang_la-CrackContext.lo -MD -MP -MF"
    "compiler/.deps/libCrackLang_la-CrackContext.Tpo -c -o"
    "compiler/libCrackLang_la-CrackContext.lo `test -f"
    "'compiler/CrackContext.cc' || echo './'`compiler/CrackContext.cc libtool:"
    "compile:  g++ -DHAVE_CONFIG_H -I. -I/usr/local/include -D_DEBUG"
    "-D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS"
    "-D__STDC_LIMIT_MACROS -DCRACKLIB=\"/usr/local/lib/crack-0.10\" -pthread"
    "-g -O2 -MT compiler/libCrackLang_la-CrackContext.lo -MD -MP -MF"
    "compiler/.deps/libCrackLang_la-CrackContext.Tpo -c"
    "compiler/CrackContext.cc  -fPIC -DPIC -o"
    "compiler/.libs/libCrackLang_la-CrackContext.o libtool: compile:  g++"
    "-DHAVE_CONFIG_H -I. -I/usr/local/include -D_DEBUG -D_GNU_SOURCE"
    "-D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS"
    "-DCRACKLIB=\"/usr/local/lib/crack-0.10\" -pthread -g -O2 -MT"
    "compiler/libCrackLang_la-CrackContext.lo -MD -MP -MF"
    "compiler/.deps/libCrackLang_la-CrackContext.Tpo -c"
    "compiler/CrackContext.cc -o compiler/libCrackLang_la-CrackContext.o"
    ">/dev/null 2>&1 libtool: compile:  g++ -DHAVE_CONFIG_H -I."
    "-I/usr/local/include -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS"
    "-D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS"
    "-DCRACKLIB=\"/usr/local/lib/crack-0.10\" -pthread -g -O2 -MT"
    "builder/llvm/libCrackLang_la-Cacher.lo -MD -MP -MF"
    "builder/llvm/.deps/libCrackLang_la-Cacher.Tpo -c builder/llvm/Cacher.cc"
    "-o builder/llvm/libCrackLang_la-Cacher.o >/dev/null 2>&1 mv -f"
    "compiler/.deps/libCrackLang_la-CrackContext.Tpo"
    "compiler/.deps/libCrackLang_la-CrackContext.Plo /bin/bash ./libtool"
    "--tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.  -I/usr/local/include"
    "-D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS"
    "-D__STDC_LIMIT_MACROS -DCRACKLIB=\"/usr/local/lib/crack-0.10\" -pthread"
    "-g -O2 -MT libCrackLang_la-Crack.lo -MD -MP -MF"
    ".deps/libCrackLang_la-Crack.Tpo -c -o libCrackLang_la-Crack.lo `test -f"
    "'Crack.cc' || echo './'`Crack.cc libtool: compile:  g++ -DHAVE_CONFIG_H"
    "-I. -I/usr/local/include -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS"
    "-D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS"
    "-DCRACKLIB=\"/usr/local/lib/crack-0.10\" -pthread -g -O2 -MT"
    "libCrackLang_la-Crack.lo -MD -MP -MF .deps/libCrackLang_la-Crack.Tpo -c"
    "Crack.cc  -fPIC -DPIC -o .libs/libCrackLang_la-Crack.o libtool: compile:"
    "g++ -DHAVE_CONFIG_H -I. -I/usr/local/include -D_DEBUG -D_GNU_SOURCE"
    "-D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS"
    "-DCRACKLIB=\"/usr/local/lib/crack-0.10\" -pthread -g -O2 -MT"
    "libCrackLang_la-Crack.lo -MD -MP -MF .deps/libCrackLang_la-Crack.Tpo -c"
    "Crack.cc -o libCrackLang_la-Crack.o >/dev/null 2>&1 mv -f"
    "builder/llvm/.deps/libCrackLang_la-Cacher.Tpo"
    "builder/llvm/.deps/libCrackLang_la-Cacher.Plo";


compare := AppendBuffer(1001);

h := SHA1();
h.update("hello");

h2 := SHA1("hello2");

if (hex(h.digest()) != "aaf4c61ddcc5e8a2dabede0f3b482cd9aea9434d" ||
    hex(h2.digest()) != "0f1defd5135596709273b3a1a07e466ea2bf4fff") {
    cout `FAILED getting digest value:\n$(hex(h.digest()))\n$(hex(h2.digest()))\n`;
    exit(1);
}

const TEST_DIGEST := "6d8156adfbd978f8b1f4fec1eaf58830ff2aa6f9";

h3 := SHA1();
h3.update(TEST_FILE);

for (int i = 1; i < TEST_FILE.size; ++i) {
    # Test with different update sizes.
    h3 = SHA1();
    for (int j = 0; j < TEST_FILE.size; j += i) {
        end := j + i;
        if (end > TEST_FILE.size)
            end = TEST_FILE.size;
        h3.update(TEST_FILE.slice(j, end));
    }

    if (hex(h3.digest()) != TEST_DIGEST)
        cout I`FAILED getting digest value for TEST_FILE with chunk size \
               $i, got $(hex(h3.digest()))\n`;
}

cout.write("ok\n");
