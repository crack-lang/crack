# tests of forward declarations
# Copyright 2010 Google Inc.
#
#   This Source Code Form is subject to the terms of the Mozilla Public
#   License, v. 2.0. If a copy of the MPL was not distributed with this
#   file, You can obtain one at http://mozilla.org/MPL/2.0/.
#


bool true = 1==1;
bool f_called;
void f();
void g() { f(); }
void f() { f_called = true; }
g();
if (!f_called)
    puts('failed to call f() function');

bool ff_called;
class A : VTableBase {
    void ff(bool val);
    void gg() { ff(true); }
    void ff(bool val) { ff_called = val; }
}

A().gg();
if (!ff_called)
    puts('failed to call ff() method');

class B {
    int a = 1;
    oper init();
    int b = 2;
    B ff() { return B(); } # verify that "oper new" gets generated.
    oper init() {}
}

# make sure initialization works
b := B();
if (b.a != 1)
    puts('B.a not initialized');
if (b.b != 2)
    puts('B.b not initialized');

# make sure that the oper new mechanics worked
if (b.ff().a != 1)
    puts('failed to call B.ff()');

# test class forwarding
class C;
void acceptC(C c);
class C {}
bool acceptC_called;
void acceptC(C c) {
    acceptC_called = true;
}
acceptC(C());
if (!acceptC_called)
    puts('failed to call acceptC');

puts('ok');
