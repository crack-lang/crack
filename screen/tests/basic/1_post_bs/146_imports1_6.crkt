%%TEST%%
import 1.6
%%ARGS%%
%%FILE%%
# Note that this test effectively imports most of the crack standard library.

@import crack.imports1_6 auto_import; @auto_import;

Heap;
HeapPrim;
HeapSort;
HeapSortPrim;
InsertionSort;
InsertionSortPrim;
QuickSort;
QuickSortPrim;

readWave;
ManagedWaveBuffer;
WaveBuffer;
WaveDef;
WaveFormatError;

bin;
stringEscape;
hex;
isDigit;
isHexDigit;
isSpace;
lstrip;
radix;
parseBool;
parseInt;
parseInt32;
parseInt64;
parseIntz;
parseUInt;
parseUInt32;
parseUInt64;
parseUIntz;
rstrip;
toLower;
toUpper;
strip;
wsplit;

CmdOption;
CmdOptions;

# Fun fact: The crack.compiler imports only work in AOT mode if the crack
# libraries are installed on the system and I have no idea why.
Annotation;
CompilerCallback;
CrackContext;
Def;
Location;
Token;
TokSerializer
TOK_ANN;
TOK_BITAND;
TOK_BITLSH;
TOK_BITOR;
TOK_BITRSH;
TOK_BITXOR;
TOK_BREAKKW;
TOK_CLASSKW;
TOK_CONTINUEKW;
TOK_DOKW;
TOK_DOLLAR;
TOK_ENUMKW;
TOK_FORKW;
TOK_ELSEKW;
TOK_IFKW;
TOK_IMPORTKW;
TOK_INKW;
TOK_ISKW;
TOK_NULLKW;
TOK_ONKW;
TOK_OPERKW;
TOK_RETURNKW;
TOK_WHILEKW;
TOK_ASSIGN;
TOK_ASSIGNAND;
TOK_ASSIGNASTERISK;
TOK_ASSIGNLSH;
TOK_ASSIGNOR;
TOK_ASSIGNRSH;
TOK_ASSIGNXOR;
TOK_ASSIGNMINUS;
TOK_ASSIGNPERCENT;
TOK_ASSIGNPLUS;
TOK_ASSIGNSLASH;
TOK_ASTERISK;
TOK_BANG;
TOK_CASEKW;
TOK_CATCHKW;
TOK_COLON;
TOK_COMMA;
TOK_CONSTKW;
TOK_DECR;
TOK_DEFINE;
TOK_DOC;
TOK_DOT;
TOK_END;
TOK_EQ;
TOK_FILENAME;
TOK_GE;
TOK_GT;
TOK_IDENT;
TOK_INCR;
TOK_INTEGER;
TOK_LBRACKET;
TOK_LCURLY;
TOK_LE;
TOK_LINENUMBER;
TOK_LPAREN;
TOK_LT;
TOK_MINUS;
TOK_MODULEKW;
TOK_NE;
TOK_PERCENT;
TOK_PLUS;
TOK_QUEST;
TOK_RBRACKET;
TOK_RCURLY;
TOK_RPAREN;
TOK_SCOPING;
TOK_SEMI;
TOK_SLASH;
TOK_STRING;
TOK_SWITCHKW;
TOK_THROWKW;
TOK_TILDE;
TOK_TRYKW;
TOK_TYPEOFKW;
TOK_ISTRBEGIN;
TOK_ISTREND;
TOK_LAMBDAKW;
TOK_LOGICAND;
TOK_LOGICOR;
TOK_FLOATLIT;
TOK_OCTALLIT;
TOK_HEXLIT;
TOK_BINLIT;
TOK_POPERRCTX;
SCOPE_MODULE;
SCOPE_FUNCTION;
SCOPE_CLASS;
STATE_BASE;
STATE_OPT_ELSE;
PCB_FUNC_DEF;
PCB_FUNC_FORWARD;
PCB_FUNC_ENTER;
PCB_FUNC_LEAVE;
PCB_CLASS_DEF;
PCB_CLASS_ENTER;
PCB_CLASS_LEAVE;
PCB_VAR_DEF;
PCB_EXPR_BEGIN;
PCB_CONTROL_STMT;
FUNCFLAG_STATIC;
FUNCFLAG_FINAL;
FUNCFLAG_ABSTRACT;
CLASSFLAG_ABSTRACT;

Array;
HashMap;
DList; List;
Matrix; NumericVector;
PriorityQueue;
TreeMap;

CipherContext;
DecryptWriter;
EncryptWriter;
EVPCipher; EVPCipherContext; EVP_enc_null; EVP_aes_128_cbc;
EVP_aes_128_ecb; EVP_aes_128_cfb; EVP_aes_128_ofb; EVP_aes_192_cbc;
EVP_aes_192_ecb; EVP_aes_192_cfb; EVP_aes_192_ofb; EVP_aes_256_cbc;
EVP_aes_256_ecb; EVP_aes_256_cfb; EVP_aes_256_ofb; EVP_des_cbc;
EVP_des_ecb; EVP_des_cfb; EVP_des_ofb; EVP_des_ede_cbc; EVP_des_ede;
EVP_des_ede_ofb; EVP_des_ede_cfb; EVP_des_ede3_cbc; EVP_des_ede3;
EVP_des_ede3_ofb; EVP_des_ede3_cfb; EVP_desx_cbc; EVP_rc4; EVP_rc4_40;
EVP_rc2_cbc; EVP_rc2_ecb; EVP_rc2_cfb; EVP_rc2_ofb; EVP_rc2_40_cbc;
EVP_rc2_64_cbc; EVP_bf_cbc; EVP_bf_ecb; EVP_bf_cfb; EVP_bf_ofb;
EVP_cast5_cbc; EVP_cast5_ecb; EVP_cast5_cfb; EVP_cast5_ofb;
EVP_aes_128_gcm; EVP_aes_192_gcm; EVP_aes_256_gcm; EVP_aes_128_ccm;
EVP_aes_192_ccm; EVP_aes_256_ccm; EVP_CIPH_STREAM_CIPHER;
EVP_CIPH_ECB_MODE; EVP_CIPH_CBC_MODE; EVP_CIPH_CFB_MODE;
EVP_CIPH_OFB_MODE; EVP_CIPH_CTR_MODE; EVP_CIPH_GCM_MODE;
EVP_CIPH_CCM_MODE; EVP_CIPH_XTS_MODE; EVP_CIPH_MODE;
EVP_CIPH_VARIABLE_LENGTH; EVP_CIPH_CUSTOM_IV; EVP_CIPH_ALWAYS_CALL_INIT;
EVP_CIPH_CTRL_INIT; EVP_CIPH_CUSTOM_KEY_LENGTH; EVP_CIPH_NO_PADDING;
EVP_CIPH_RAND_KEY; EVP_CIPH_CUSTOM_COPY; EVP_CIPH_FLAG_DEFAULT_ASN1;
EVP_CIPH_FLAG_LENGTH_BITS; EVP_CIPH_FLAG_FIPS;
EVP_CIPH_FLAG_NON_FIPS_ALLOW; EVP_CIPH_FLAG_CUSTOM_CIPHER;
EVP_CIPH_FLAG_AEAD_CIPHER; EVP_CTRL_INIT; EVP_CTRL_SET_KEY_LENGTH;
EVP_CTRL_GET_RC2_KEY_BITS; EVP_CTRL_SET_RC2_KEY_BITS;
EVP_CTRL_GET_RC5_ROUNDS; EVP_CTRL_SET_RC5_ROUNDS; EVP_CTRL_RAND_KEY;
EVP_CTRL_PBE_PRF_NID; EVP_CTRL_COPY; EVP_CTRL_GCM_SET_IVLEN;
EVP_CTRL_GCM_GET_TAG; EVP_CTRL_GCM_SET_TAG; EVP_CTRL_GCM_SET_IV_FIXED;
EVP_CTRL_GCM_IV_GEN; EVP_CTRL_CCM_SET_IVLEN; EVP_CTRL_CCM_GET_TAG;
EVP_CTRL_CCM_SET_TAG; EVP_CTRL_CCM_SET_L; EVP_CTRL_CCM_SET_MSGLEN;
EVP_CTRL_AEAD_TLS1_AAD;

#Lmdb;
#LmdbItem;
#LmdbIter;
#SimpleLmdb;
#MDB_BAD_RSLOT; MDB_BAD_TXN; MDB_LAST_ERRCODE; MDB_BAD_VALSIZE;
#MDB_CORRUPTED; MDB_PANIC; MDB_VERSION_MISMATCH; MDB_INVALID;
#MDB_CURSOR_FULL; MDB_PAGE_FULL; MDB_MAP_RESIZED; MDB_INCOMPATIBLE;
#MDB_DUPFIXED; MDB_INTEGERDUP; MDB_REVERSEDUP; MDB_CREATE;
#MDB_NOOVERWRITE; MDB_FIRST; MDB_FIRST_DUP; MDB_GET_BOTH;
#MDB_GET_BOTH_RANGE; MDB_GET_CURRENT; MDB_GET_MULTIPLE; MDB_LAST;
#MDB_LAST_DUP; MDB_NEXT; MDB_MAPASYNC; MDB_NOTLS; MDB_REVERSEKEY;
#MDB_DUPSORT; MDB_INTEGERKEY; MDB_MAP_FULL; MDB_DBS_FULL;
#MDB_READERS_FULL; MDB_TLS_FULL; MDB_TXN_FULL; MDB_MULTIPLE;
#MDB_SUCCESS; MDB_KEYEXIST; MDB_NOTFOUND; MDB_PAGE_NOTFOUND;
#MDB_NEXT_DUP; MDB_NEXT_MULTIPLE; MDB_NEXT_NODUP; MDB_PREV;
#MDB_PREV_DUP; MDB_NODUPDATA; MDB_CURRENT; MDB_RESERVE; MDB_APPEND;
#MDB_APPENDDUP; MDB_NOSUBDIR; MDB_NOSYNC; MDB_RDONLY; MDB_NOMETASYNC;
#MDB_WRITEMAP; MDB_PREV_NODUP; MDB_SET; MDB_SET_KEY; MDB_SET_RANGE;
#MDB_VERSION_MAJOR; MDB_VERSION_MINOR; MDB_VERSION_PATCH; MDB_FIXEDMAP;

#BSON;
#BSONOID;
#MongoSync;
#BSON_BINARY_SUBTYPE_GENERIC; BSON_BINARY_SUBTYPE_FUNCTION;
#BSON_BINARY_SUBTYPE_BINARY; BSON_BINARY_SUBTYPE_UUID;
#BSON_BINARY_SUBTYPE_MD5; BSON_BINARY_SUBTYPE_USER_DEFINED;
#BSON_TYPE_NONE; BSON_TYPE_DOUBLE; BSON_TYPE_STRING;
#BSON_TYPE_DOCUMENT; BSON_TYPE_ARRAY; BSON_TYPE_BINARY; BSON_TYPE_OID;
#BSON_TYPE_BOOLEAN; BSON_TYPE_UTC_DATETIME; BSON_TYPE_NULL;
#BSON_TYPE_REGEXP; BSON_TYPE_JS_CODE; BSON_TYPE_SYMBOL;
#BSON_TYPE_JS_CODE_W_SCOPE; BSON_TYPE_INT32; BSON_TYPE_TIMESTAMP;
#BSON_TYPE_INT64; MONGO_COLLECTION_DEFAULTS; MONGO_COLLECTION_CAPPED;
#MONGO_COLLECTION_CAPPED_MAX; MONGO_COLLECTION_AUTO_INDEX_ID;
#MONGO_COLLECTION_SIZED; MONGO_CONN_LOCAL; MONGO_INDEX_UNIQUE;
#MONGO_INDEX_DROP_DUPS; MONGO_INDEX_BACKGROUND; MONGO_INDEX_SPARSE;
#MONGO_WIRE_FLAG_QUERY_TAILABLE_CURSOR; MONGO_WIRE_FLAG_QUERY_SLAVE_OK;
#MONGO_WIRE_FLAG_QUERY_NO_CURSOR_TIMEOUT;
#MONGO_WIRE_FLAG_QUERY_AWAIT_DATA; MONGO_WIRE_FLAG_QUERY_EXHAUST;
#MONGO_WIRE_FLAG_QUERY_PARTIAL_RESULTS; MONGO_WIRE_FLAG_UPDATE_UPSERT;
#MONGO_WIRE_FLAG_UPDATE_MULTI;

base64AltDecode;
base64AltEncode;
base64Decode;
base64Encode;

JSONArray;
JSONBool;
JSONFloat;
JSONFormatter;
JSONInt;
JSONObject;
JSONParseException;
JSONParser;
JSONString;
JSONStringFormatter;
JSONUnexpectedToken;

EventCallback;
EventManager;
EventManagerBackRef;

IniError;
IniMap;
IniParser;

HashMapFieldSet;

cwd;
normalize;
makePath;
AccessDeniedError;
NoEntryError;
Path;
PathIter;
PathStat;

Functor0;
Functor1;
Functor2;
Functor3;
Functor4;

sdlFillRect;
SDLApp;
SDLCoord;
SDLSurface;
SDLKeyboardEvent;
SDLKeyboardHandler;
SDLMouseButtonEvent;
SDLMouseButtonHandler;
SDLMouseMotionEvent;
SDLResizeEvent;
SDLResizeHandler;
SDLK_UNKNOWN;
SDLK_FIRST;
SDLK_BACKSPACE;
SDLK_TAB;
SDLK_CLEAR;
SDLK_RETURN;
SDLK_PAUSE;
SDLK_ESCAPE;
SDLK_SPACE;
SDLK_EXCLAIM;
SDLK_QUOTEDBL;
SDLK_HASH;
SDLK_DOLLAR;
SDLK_AMPERSAND;
SDLK_QUOTE;
SDLK_LEFTPAREN;
SDLK_RIGHTPAREN;
SDLK_ASTERISK;
SDLK_PLUS;
SDLK_COMMA;
SDLK_MINUS;
SDLK_PERIOD;
SDLK_SLASH;
SDLK_0;
SDLK_1;
SDLK_2;
SDLK_3;
SDLK_4;
SDLK_5;
SDLK_6;
SDLK_7;
SDLK_8;
SDLK_9;
SDLK_COLON;
SDLK_SEMICOLON;
SDLK_LESS;
SDLK_EQUALS;
SDLK_GREATER;
SDLK_QUESTION;
SDLK_AT;
SDLK_LEFTBRACKET;
SDLK_BACKSLASH;
SDLK_RIGHTBRACKET;
SDLK_CARET;
SDLK_UNDERSCORE;
SDLK_BACKQUOTE;
SDLK_a;
SDLK_b;
SDLK_c;
SDLK_d;
SDLK_e;
SDLK_f;
SDLK_g;
SDLK_h;
SDLK_i;
SDLK_j;
SDLK_k;
SDLK_l;
SDLK_m;
SDLK_n;
SDLK_o;
SDLK_p;
SDLK_q;
SDLK_r;
SDLK_s;
SDLK_t;
SDLK_u;
SDLK_v;
SDLK_w;
SDLK_x;
SDLK_y;
SDLK_z;
SDLK_DELETE;
SDLK_WORLD_0;
SDLK_WORLD_1;
SDLK_WORLD_2;
SDLK_WORLD_3;
SDLK_WORLD_4;
SDLK_WORLD_5;
SDLK_WORLD_6;
SDLK_WORLD_7;
SDLK_WORLD_8;
SDLK_WORLD_9;
SDLK_WORLD_10;
SDLK_WORLD_11;
SDLK_WORLD_12;
SDLK_WORLD_13;
SDLK_WORLD_14;
SDLK_WORLD_15;
SDLK_WORLD_16;
SDLK_WORLD_17;
SDLK_WORLD_18;
SDLK_WORLD_19;
SDLK_WORLD_20;
SDLK_WORLD_21;
SDLK_WORLD_22;
SDLK_WORLD_23;
SDLK_WORLD_24;
SDLK_WORLD_25;
SDLK_WORLD_26;
SDLK_WORLD_27;
SDLK_WORLD_28;
SDLK_WORLD_29;
SDLK_WORLD_30;
SDLK_WORLD_31;
SDLK_WORLD_32;
SDLK_WORLD_33;
SDLK_WORLD_34;
SDLK_WORLD_35;
SDLK_WORLD_36;
SDLK_WORLD_37;
SDLK_WORLD_38;
SDLK_WORLD_39;
SDLK_WORLD_40;
SDLK_WORLD_41;
SDLK_WORLD_42;
SDLK_WORLD_43;
SDLK_WORLD_44;
SDLK_WORLD_45;
SDLK_WORLD_46;
SDLK_WORLD_47;
SDLK_WORLD_48;
SDLK_WORLD_49;
SDLK_WORLD_50;
SDLK_WORLD_51;
SDLK_WORLD_52;
SDLK_WORLD_53;
SDLK_WORLD_54;
SDLK_WORLD_55;
SDLK_WORLD_56;
SDLK_WORLD_57;
SDLK_WORLD_58;
SDLK_WORLD_59;
SDLK_WORLD_60;
SDLK_WORLD_61;
SDLK_WORLD_62;
SDLK_WORLD_63;
SDLK_WORLD_64;
SDLK_WORLD_65;
SDLK_WORLD_66;
SDLK_WORLD_67;
SDLK_WORLD_68;
SDLK_WORLD_69;
SDLK_WORLD_70;
SDLK_WORLD_71;
SDLK_WORLD_72;
SDLK_WORLD_73;
SDLK_WORLD_74;
SDLK_WORLD_75;
SDLK_WORLD_76;
SDLK_WORLD_77;
SDLK_WORLD_78;
SDLK_WORLD_79;
SDLK_WORLD_80;
SDLK_WORLD_81;
SDLK_WORLD_82;
SDLK_WORLD_83;
SDLK_WORLD_84;
SDLK_WORLD_85;
SDLK_WORLD_86;
SDLK_WORLD_87;
SDLK_WORLD_88;
SDLK_WORLD_89;
SDLK_WORLD_90;
SDLK_WORLD_91;
SDLK_WORLD_92;
SDLK_WORLD_93;
SDLK_WORLD_94;
SDLK_WORLD_95;
SDLK_KP0;
SDLK_KP1;
SDLK_KP2;
SDLK_KP3;
SDLK_KP4;
SDLK_KP5;
SDLK_KP6;
SDLK_KP7;
SDLK_KP8;
SDLK_KP9;
SDLK_KP_PERIOD;
SDLK_KP_DIVIDE;
SDLK_KP_MULTIPLY;
SDLK_KP_MINUS;
SDLK_KP_PLUS;
SDLK_KP_ENTER;
SDLK_KP_EQUALS;
SDLK_UP;
SDLK_DOWN;
SDLK_RIGHT;
SDLK_LEFT;
SDLK_INSERT;
SDLK_HOME;
SDLK_END;
SDLK_PAGEUP;
SDLK_PAGEDOWN;
SDLK_F1;
SDLK_F2;
SDLK_F3;
SDLK_F4;
SDLK_F5;
SDLK_F6;
SDLK_F7;
SDLK_F8;
SDLK_F9;
SDLK_F10;
SDLK_F11;
SDLK_F12;
SDLK_F13;
SDLK_F14;
SDLK_F15;
SDLK_NUMLOCK;
SDLK_CAPSLOCK;
SDLK_SCROLLOCK;
SDLK_RSHIFT;
SDLK_LSHIFT;
SDLK_RCTRL;
SDLK_LCTRL;
SDLK_RALT;
SDLK_LALT;
SDLK_RMETA;
SDLK_LMETA;
SDLK_LSUPER;
SDLK_RSUPER;
SDLK_MODE;
SDLK_COMPOSE;
SDLK_HELP;
SDLK_PRINT;
SDLK_SYSREQ;
SDLK_BREAK;
SDLK_MENU;
SDLK_POWER;
SDLK_EURO;
SDLK_UNDO;

sdlgDrawString;
sdlgDrawLine;
sdlgDrawAALine;
sdlgDrawRect;
Polygon;
SDLG_RED;
SDLG_GREEN;
SDLG_BLUE;
SDLG_BLACK;
SDLG_WHITE;
SDLG_CYAN;
SDLG_YELLOW;
SDLG_MAGENTA;

# Requires _sdl_mixer
#SDLAudio;
#SDLWave;
#SDLWaveFileError;

# Requires GTK.
#GTKApp;
#GTKBox;
#GTKButton;
#GTKContainer;
#GTKEntry;
#GTKHandlers;
#GTKHBox;
#GTKLabel;
#GTKList;
#GTKObject;
#GTKTooltips;
#GTKToplevel;
#GTKVBox;
#GTKWidget;

MD5;
Murmur3_32;
SHA1;
SHA256;
Hash;

HTTPAuthHandler;
HTTPAuthInfo;
HTTPAuthInfoImpl;
HTTPAuthUser;
HTTPConcatter;
HTTPLoginURL;
HTTPLoginHandler;
HTTPRandomNumberGenerator;
StupidRNG;

HTTPAbort;
HTTPCookie;
HTTPRequest;

HTTPServer;
HTTPTestRequest;

encodeForURI;
parseHTTPQuery;
parseUnescapedQuery;
HTTPChain;
HTTPHandlerFunc;
HTTPMethodDispatcher;
HTTPMethodHandler;
HTTPMultiMethodHandler;
HTTPPathDispatcher;
HTTPPostDataCollector;
HTTPPostHandler;
HTTPPostRequestHandler;
HTTPQueryParmMap;
HTTPRequestHandler;
HTTP_NOT_FOUND;
URI_HOST;
URI_PATH;
URI_PATH_WITH_SCHEME;
URI_PORT;
URI_QUERY;
URI_USERINFO;

cerr;
cin;
cout;
ioMove;
readAll;
AppendBufferWriter;
BufferReader;
FDReader;
FDWriter;
FileHandle;
Formatter;
FStr;
OwningFDReader;
OwningFDWriter;
Seekable;
SeekableReader;
SeekableWriter;
StandardFormatter;
StringFormatter;
StringReader;
StringWriter;
Reader;
Writer;

Indenter;
FullReader;
LineIter;
LineReader;
PageBuffer;
PageBufferReader;
PageBufferString;

cmp;
AppendBuffer;
AssertionError;
BadCastError;
Box;
Buffer;
CString;
Exception;
FieldSet;
FreeBase;
IndexError;
InvalidArgumentError;
InvalidResourceError;
InvalidStateError;
KeyError;
ManagedBuffer;
StackFrame;
SubString;
SystemError;
WriteBuffer;

logDebug;
logError;
logFatal;
logInfo;
logWarn;
setLogFile;
setLogFormatter;
setLogLevel;
setLogPath;
setLogWriter;
DEBUG;
ERROR;
FATAL;
INFO;
WARN;

abs;
acos;
acosh;
asin;
asinh;
atan;
atanh;
atof;
atoi;
cbrt;
ceil;
clearexcept;
copysign;
cos;
cosh;
erf;
erfc;
errno;
exp;
exp2;
expm1;
fdim;
floor;
fmod;
fpclassify;
hypot;
ilogb;
isfinite;
isinf;
isnan;
isnormal;
lgamma;
log;
log10;
log1p;
log2;
min;
nearbyint;
nextafter;
pow;
remainder;
rint;
round;
setErrno;
sign;
sin;
sinh;
sqrt;
strtod;
strtof;
strtoi;
tan;
tanh;
testexcept;
tgamma;
trunc;
usecs;
ALL_EXCEPT;
DIVBYZERO;
EINVAL;
ERANGE;
FP_ILOGB0;
FP_ILOGBNAN;
FP_INFINITE;
FP_NAN;
FP_NORMAL;
FP_SUBNORMAL;
FP_ZERO;
HUGE_VAL;
INFINITY;
INVALID;
NAN;
OVERFLOW;
UNDERFLOW;

MIDIClientInfo;
MIDIPort;
MIDIPortInfo;
MIDIQueue;
MIDISequencer;

midiTrackMerge;
MIDIChannelEvent;
MIDIControlChange;
MIDIEndTrack;
MIDIEvent;
MIDIEventSource;
MIDINoteEvent;
MIDINoteOn;
MIDINoteOff;
MIDIPitchWheel;
MIDIProgramChange;
MIDISeekableEventSource;
MIDISysEx;
MIDITrack;
MIDIReader;
MIDIWriter;

FluidSettings;
FluidSynth;

Comm;
CommConnection;
CommConnectionFactory;
CommListener;
CommNewConnection;
CommProxy;
CommUserHandler;
CommUserHandlerFactory;
CommWaiter;
CommWaiterFor;
SyncCommProxy;

IRCChannel;
IRCClient;
IRCUser;

SSLConnection;
SSLContext;
SSLError;

Process;
ProcessHandler;
ProcessHandlerImpl;
CRK_PIPE_STDIN;
CRK_PIPE_STDOUT;
CRK_PIPE_STDERR;
CRK_PROC_STILL_RUNNING;
CRK_PROC_KILLED;
CRK_PROC_STOPPED;
CRK_PROC_EXITED;
CRK_PROC_FAILED;
CRK_PROC_EXECFAIL;

readProtoFromString;
ProtoField;
ProtoMessage;
ProtoReader;
ProtoWriter;

initstate;
random;
setstate;
srandom;
uuid;
MersenneTwister;

regexEscape;
Match;
Regex;
RegexError;
PCRE_ANCHORED;
PCRE_AUTO_CALLOUT;
PCRE_CASELESS;
PCRE_DOLLAR_ENDONLY;
PCRE_DOTALL;
PCRE_EXTENDED;
PCRE_EXTRA;
PCRE_FIRSTLINE;
PCRE_MULTILINE;
PCRE_NO_AUTO_CAPTURE;
PCRE_NO_UTF8_CHECK;
PCRE_UNGREEDY;
PCRE_UTF8;

BufferDeserializer;
SerialReader;
SerialWriter;

center;
ljust;
remove;
replace;
rjust;
split;
tsplit;
StringArray;

argv;
env;
exit;

Condition;
Event;
Mutex;
MutexLock;
Queue;
Thread;

isLeap;
makeCalendar;
seconds;
timeAdd;
Date;
Time;
TimeDelta;

cout `ok\n`;
%%EXPECT%%
ok
%%STDIN%%
