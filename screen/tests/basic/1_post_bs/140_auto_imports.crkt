%%TEST%%
auto-imports
%%ARGS%%
%%FILE%%
@import test.test_imports auto_import; @auto_import;

appBuf := AppendBuffer(1024);
appBuf.extend('some data');
foo := FooBuffer(appBuf.buffer, appBuf.size);

if (true) {
    # Nested module contexts require some special lookups.
    cout;
}

cout `ok: $foo\n`;
# Note that func() uses the print() function, which appears to use its own
# buffers and doesn't flush as quickly as the interpolation string on cout, so
# it ends up writing last regardless of whether it is before or after the cout.
func();

%%EXPECT%%
ok: some data
testmod2
in testmod2.func()
%%STDIN%%
